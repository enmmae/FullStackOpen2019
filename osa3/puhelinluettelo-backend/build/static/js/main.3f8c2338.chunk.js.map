{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","request","post","console","log","id","put","concat","delete","Notification","_ref","message","error","react_default","a","createElement","className","Filter","props","value","onChange","PersonForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","Persons","persons","filter","person","name","toLowerCase","includes","map","key","number","onClick","deletePerson","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","setError","useEffect","personService","initialPersons","timer","setTimeout","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","personObject","toUpdate","length","window","confirm","returnedPerson","catch","App_Persons","aperson","ReactDOM","render","src_App","document","getElementById"],"mappings":"qNACMA,EAAU,eA4BDC,EAtBA,WAEb,OADgBC,IAAMC,IAAIH,GACXI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAoB5BL,EAjBA,SAAAM,GACb,IAAMC,EAAUN,IAAMO,KAAKT,EAASO,GAGpC,OAFAG,QAAQC,IAAIX,GACZU,QAAQC,IAAIJ,GACLC,EAAQJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa5BL,EAVA,SAACW,EAAIL,GAElB,OADgBL,IAAMW,IAAN,GAAAC,OAAad,EAAb,KAAAc,OAAwBF,GAAML,GAC/BH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ5BL,EALM,SAACW,GAEpB,OADgBV,IAAMa,OAAN,GAAAD,OAAgBd,EAAhB,KAAAc,OAA2BF,IAC5BR,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCgJrCU,EAAe,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,MAC/B,OAAgB,OAAZD,EACK,KAIPE,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,GACbD,IAQDM,EAAS,SAACC,GACd,OACEL,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,gCACoBF,EAAAC,EAAAC,cAAA,SAChBI,MAAOD,EAAMC,MACbC,SAAUF,EAAME,cAMpBC,EAAa,SAACH,GAClB,OACEL,EAAAC,EAAAC,cAAA,QAAMO,SAAUJ,EAAMI,UACpBT,EAAAC,EAAAC,cAAA,oBACQF,EAAAC,EAAAC,cAAA,SACJI,MAAOD,EAAMK,UACbH,SAAUF,EAAMM,gBAEpBX,EAAAC,EAAAC,cAAA,sBACUF,EAAAC,EAAAC,cAAA,SACNI,MAAOD,EAAMO,YACbL,SAAUF,EAAMQ,kBAEpBb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQY,KAAK,UAAb,UASFC,EAAU,SAACV,GACf,OACEL,EAAAC,EAAAC,cAAA,WACGG,EAAMW,QACJC,OAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAAShB,EAAMY,OAAOG,iBACjEE,IAAI,SAAAJ,GAAM,OACTlB,EAAAC,EAAAC,cAAA,OAAKqB,IAAKL,EAAOC,MACdD,EAAOC,KADV,IACiBD,EAAOM,OADxB,IACgCxB,EAAAC,EAAAC,cAAA,UAAQuB,QAAS,kBAAMpB,EAAMqB,aAAaR,KAA1C,eAM3BS,EA7NH,WAAM,IAAAC,EACcC,mBAAS,IADvBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTZ,EADSc,EAAA,GACAG,EADAH,EAAA,GAAAI,EAEcL,mBAAS,IAFvBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAETE,EAFSD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGkBT,mBAAS,IAH3BU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGTE,EAHSD,EAAA,GAGEE,EAHFF,EAAA,GAAAG,EAIYb,mBAAS,IAJrBc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAITzB,EAJS0B,EAAA,GAIDC,EAJCD,EAAA,GAAAE,EAKwBhB,mBAAS,MALjCiB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAKTE,EALSD,EAAA,GAKKE,EALLF,EAAA,GAAAG,EAMUpB,mBAAS,IANnBqB,EAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAMTlD,EANSmD,EAAA,GAMFC,EANED,EAAA,GAYhBE,oBAAU,WACRC,IAEKrE,KAAK,SAAAsE,GACJrB,EAAWqB,MAEhB,IAMH,IAAMC,EAAQ,WACZ,OACEC,WAAW,WACTR,EAAgB,OACf,MA8GP,OACEhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBAEAF,EAAAC,EAAAC,cAACuD,EAAD,CAAc3D,QAASiD,EAAchD,MAAOA,IAE5CC,EAAAC,EAAAC,cAACwD,EAAD,CAAQpD,MAAOW,EAAQV,SAlBA,SAACoD,GAC1Bf,EAAUe,EAAMC,OAAOtD,UAmBrBN,EAAAC,EAAAC,cAAA,uBAEAF,EAAAC,EAAAC,cAAC2D,EAAD,CAAYpD,SApHE,SAACkD,GACjBA,EAAMG,iBAEN,IAAMC,EAAe,CACnB5C,KAAMiB,EACNZ,OAAQgB,GAUJwB,EAAWhD,EAAQC,OAAO,SAAAC,GAAM,OAAIA,EAAOC,OAAS4C,EAAa5C,OAEnE6C,EAASC,OAAS,GACiG,IAAjHC,OAAOC,QAAP,GAAAzE,OAAkBqE,EAAa5C,KAA/B,6EACF7B,QAAQC,IAAR,qBAAAG,OAAiC0C,EAAjC,OAAA1C,OAA8C8C,IAC9ClD,QAAQC,IAAIyE,GAEZX,EACUW,EAAS,GAAGxE,GAAIuE,GACrB/E,KAAK,SAAAoF,GACJ9E,QAAQC,IAAI6E,GAEZnC,EAAWjB,EAAQC,OAAO,SAAAC,GAAM,OAAIA,EAAO1B,KAAOwE,EAAS,GAAGxE,KAAIE,OAAO0E,IACzE/B,EAAW,IACXI,EAAa,IACbO,EAAe,WAAAtD,OAAY0E,EAAejD,OAC1CgC,EAAS,aAEVkB,MAAM,SAAAtE,GACLiD,EAAe,kBAAAtD,OAAmBqE,EAAa5C,KAAhC,0CACfgC,EAAS,SACTlB,EAAWjB,EAAQC,OAAO,SAAAC,GAAM,OAAIA,EAAOC,OAAS4C,EAAa5C,UAEvEoC,MAIFjE,QAAQC,IAAR,uBAAAG,OAAmC0C,EAAnC,OAAA1C,OAAgD8C,IAChDlD,QAAQC,IAAIyB,GAKZqC,EACUU,GACL/E,KAAK,SAAAoF,GACJ9E,QAAQC,IAAI,gCACZD,QAAQC,IAAI6E,GAEZnC,EAAWjB,EAAQtB,OAAO0E,IAC1B/B,EAAW,IACXI,EAAa,IACbO,EAAe,SAAAtD,OAAU0E,EAAejD,OACxCgC,EAAS,aAEVkB,MAAM,SAAAtE,GACLT,QAAQC,IAAIQ,EAAMd,SAASC,MAC3B8D,EAAe,GAAAtD,OAAIK,IACnBoD,EAAS,SACTlB,EAAWjB,EAAQC,OAAO,SAAAC,GAAM,OAAIA,EAAOC,OAAS4C,EAAa5C,UAEvEoC,MAkDiC7C,UAAW0B,EAASzB,aAlBhC,SAACgD,GACxBtB,EAAWsB,EAAMC,OAAOtD,QAkBVM,YAAa4B,EAAW3B,eAfb,SAAC8C,GAC1BlB,EAAakB,EAAMC,OAAOtD,UAgBxBN,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAACoE,EAAD,CAAStD,QAASA,EAASC,OAAQA,EAAQS,aAhD1B,SAACR,IAC8B,IAA9CgD,OAAOC,QAAP,UAAAzE,OAAyBwB,EAAOC,KAAhC,SACF7B,QAAQC,IAAR,sBAAAG,OAAkCwB,EAAOC,OAEzCkC,EACgBnC,EAAO1B,IAClBR,KAAK,SAAAC,GACJK,QAAQC,IAAIN,GACZgD,EAAWjB,EAAQC,OAAO,SAAAsD,GAAO,OAAIA,EAAQ/E,KAAO0B,EAAO1B,MAC3DwD,EAAe,WAAAtD,OAAYwB,EAAOC,OAClCgC,EAAS,aAEVkB,MAAM,SAAAtE,GACLiD,EAAe,kBAAAtD,OAAmBwB,EAAOC,KAA1B,0CACfgC,EAAS,SACTlB,EAAWjB,EAAQC,OAAO,SAAAsD,GAAO,OAAIA,EAAQ/E,KAAO0B,EAAO1B,QAEjE+D,gBCjINiB,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3f8c2338.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\n/* 2.16: puhelinluettelo step8 */\r\n/* Siirrä palvelimen kanssa kommunikoinnista vastaava toiminnallisuus omaan moduuliin */\r\n/* tämän osan materiaalissa olevan esimerkin tapaan */\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  console.log(baseUrl)\r\n  console.log(newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n/* 2.6: puhelinluettelo step1 */\n/* Toteutetaan yksinkertainen puhelinluettelo */\n\n/* 2.8: puhelinluettelo step3 */\n/* Lisää sovellukseen mahdollisuus antaa henkilöille puhelinnumero */\n\n/* 2.9*: puhelinluettelo step4 */\n/* Tee lomakkeeseen hakukenttä, jonka avulla näytettävien nimien listaa voidaan rajata */\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [error, setError] = useState('')\n\n  /* 2.11: puhelinluettelo step6 */\n  /* Muuta sovellusta siten, että datan alkutila haetaan axios-kirjaston avulla palvelimelta */\n  /* Hoida datan hakeminen Effect hookilla */\n\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n        })\n  }, [])\n\n  /* 2.19: puhelinluettelo step11 */\n  /* Toteuta osan 2 esimerkin parempi virheilmoitus tyyliin ruudulla muutaman sekunnin */\n  /* näkyvä ilmoitus, joka kertoo onnistuneista operaatioista */\n\n  const timer = () => {\n    return (\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    )\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    \n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    /* 2.7: puhelinluettelo step2 */\n    /* Jos lisättävä nimi on jo sovelluksen tiedossa, estä lisäys */\n\n    /* 2.18*: puhelinluettelo step10 */\n    /* Muuta toiminnallisuutta siten, että jos jo olemassaolevalle henkilölle lisätään numero, */\n    /* korvaa lisätty numero aiemman numeron */\n\n    const toUpdate = persons.filter(person => person.name === personObject.name)\n\n    if (toUpdate.length > 0) {\n      if (window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`) === true) {\n        console.log(`Updating a person ${newName} : ${newNumber}`)\n        console.log(toUpdate)\n\n        personService\n          .update(toUpdate[0].id, personObject)\n            .then(returnedPerson => {\n              console.log(returnedPerson)\n\n              setPersons(persons.filter(person => person.id !== toUpdate[0].id).concat(returnedPerson))\n              setNewName('')\n              setNewNumber('')\n              setErrorMessage(`Updated ${returnedPerson.name}`)\n              setError('success')\n            })\n            .catch(error => {\n              setErrorMessage(`Information of ${personObject.name} has already been removed from server`)\n              setError('error')\n              setPersons(persons.filter(person => person.name !== personObject.name))\n            })\n        timer()\n      }\n    } \n    else { \n      console.log(`Adding a new person ${newName} : ${newNumber}`)\n      console.log(persons)  \n\n      /* 2.15: puhelinluettelo step7 */\n      /* Tällä hetkellä luetteloon lisättäviä uusia numeroita ei synkronoida palvelimelle. Korjaa tilanne */\n\n      personService\n        .create(personObject)\n          .then(returnedPerson => {\n            console.log(\"ÄÄÄÄÄÄÄ\")\n            console.log(returnedPerson)\n            \n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setErrorMessage(`Added ${returnedPerson.name}`)\n            setError('success')\n          })\n          .catch(error => {\n            console.log(error.response.data)\n            setErrorMessage(`${error}`)\n            setError('error')\n            setPersons(persons.filter(person => person.name !== personObject.name))\n          })\n      timer()\n    }\n  }\n\n  /* 2.17: puhelinluettelo step9 */\n  /* Tee ohjelmaan mahdollisuus yhteystietojen poistamiseen */\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name} ?`) === true) {\n      console.log(`Deleting a person: ${person.name}`)\n\n      personService\n        .deletePerson(person.id)\n          .then(response => {\n            console.log(response)\n            setPersons(persons.filter(aperson => aperson.id !== person.id))\n            setErrorMessage(`Deleted ${person.name}`)\n            setError('success')\n          })\n          .catch(error => {\n            setErrorMessage(`Information of ${person.name} has already been removed from server`)\n            setError('error')\n            setPersons(persons.filter(aperson => aperson.id !== person.id))\n          })\n      timer()\n    }\n  }\n  \n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={errorMessage} error={error}/>\n\n      <Filter value={filter} onChange={handleFilterChange}/>\n\n      <h3>Add a new</h3>\n\n      <PersonForm onSubmit={addPerson} nameValue={newName} nameOnChange={handleNameChange}\n                  numberValue={newNumber} numberOnChange={handleNumberChange}/>\n\n      <h3>Numbers</h3>\n\n      <Persons persons={persons} filter={filter} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nconst Notification = ({ message, error }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={error}>\n      {message}\n    </div>\n  )\n}\n\n/* 2.10: puhelinluettelo step5 */\n/* Refaktoroi sovellusta eriyttämällä ainakin kolme sopivaa komponentteia */\n\nconst Filter = (props) => {\n  return (\n    <form>\n      <div>\n        filter shown with <input \n          value={props.value}\n          onChange={props.onChange}/>\n      </div>\n    </form>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <div>\n        name: <input \n          value={props.nameValue}\n          onChange={props.nameOnChange}/>\n      </div>\n      <div>\n        number: <input\n          value={props.numberValue}\n          onChange={props.numberOnChange}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\n/* const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())) */\n/* ^ voisi olla noin App:ssa ennen returnia */\n\nconst Persons = (props) => {\n  return (\n    <div>\n      {props.persons\n        .filter(person => person.name.toLowerCase().includes(props.filter.toLowerCase()))\n        .map(person => \n          <div key={person.name}>\n            {person.name} {person.number} <button onClick={() => props.deletePerson(person)}>delete</button>\n          </div>)}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}